import sys
 
# Import non-standard modules.
import pygame
from pygame.locals import *
 
def update(dt):
  """        Update . Called once per frame.
        dt = time passed since last frame.
     for consitant movement no matter what framerate need equation like below:  

    x += v * dt

         scale elocity based on time NOT FRAMES"""
  


  # Go through events that are passed to the script by the window.
  for event in pygame.event.get():
    # We need to handle these events. 
    # QUIT event is the 1st or most important/needed
    # When window is closed this will exit and stop game.
    if event.type == QUIT:
      pygame.quit() # Opposite of pygame.init
      sys.exit() # Need this to actually close out!
      
    # Handle other events as you wish.
 
def draw(screen):
  """
  Draw things to the window. Called once per frame.
  """
  screen.fill((0, 0, 0)) # Fill the screen with black.
  
  # Redraw screen here.
  
  # Flip the display so that the things we drew actually show up.
  pygame.display.flip()
 
def runPyGame():
  # Initialise PyGame.
  pygame.init()
  
  # Set up the clock. This will tick every frame
  fps = 60.0
  fpsClock = pygame.time.Clock()
  
  # Set up the window.
  width, height = 640, 480
  screen = pygame.display.set_mode((width, height))
  
  # screen is the surface representing the window.
  # PyGame surfaces can be thought of as screen sections that you can draw onto.
  # You can also draw surfaces onto other surfaces, rotate surfaces, and transform surfaces.
  
  # Main game loop.
  dt = 1/fps # dt is the time since last frame.
  while True: # Loop forever!
    update(dt) # You can update/draw here, I've just moved the code for neatness.
    draw(screen)
    
    dt = fpsClock.tick(fps)
